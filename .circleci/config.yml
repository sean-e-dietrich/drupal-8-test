version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
          DRUSH_LAUNCHER_FALLBACK: /usr/local/bin/drush8
      - image: circleci/mariadb:jessie
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd
      - image: circleci/redis:stretch

    steps:
      - checkout
      - run:
          name: Add Composer to Path
          command: echo 'export PATH="$PATH:$HOME/.composer/vendor/bin' >> $BASH_ENV
      - run:
          name: Configure & start Apache
          command: |
            sudo ~/project/.circleci/install.sh
            sudo cp ~/project/.circleci/example.conf /etc/apache2/sites-available/example.conf
            sudo a2ensite example
            sudo service apache2 start
      - run:
          name: Update host file
          command: |
            echo 127.0.0.1 example.localhost | sudo tee -a /etc/hosts
            cat /etc/hosts
      - run:
          name: Run Composer
          command: composer install
      - run:
          name: Create Database
          command: |
            mysql -u root -prootpw -h 127.0.0.1 \
              -e 'CREATE DATABASE IF NOT EXISTS `default` CHARACTER SET utf8mb4;'
      - run:
          name: Copy Settings File
          command: cp sites/default/default.settings.php sites/default/settings.php || true
      - run:
          name: Add Files Directory
          command: |
            mkdir sites/default/files || true
            chmod 777 sites/default/files
      - run:
          name: Run Site Install
          command: |
            vendor/bin/drush site-install standard \
              -y \
              install_configure_form.enable_update_status_module=NULL \
              --db-url="mysql://root:rootpw@127.0.0.1/default" \
              --db-su=root \
              --db-su-pw=rootpw \
              --site-name="Test Site" \
              --site-mail="test@example.com" \
              --account-mail="test@example.com" \
              --account-name="testuser" \
              --account-pass="test123"
      - run:
          name: Test Curl
          command: curl -i "http://example.localhost"
      - run:
          name: Added pageres CLI tool
          command: npm install -g pageres-cli
      - run:
          name: Take Screenshots
          command: |
            mkdir -p /tmp/artifacts/
            cd /tmp/artifacts/
            pageres https://google.com http://example.localhost 1280x800 --format=jpg --filename="<%= date %>_<%= url %>"
      - store_artifacts:
          path: /tmp/artifacts
